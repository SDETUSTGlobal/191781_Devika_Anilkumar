

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.TreeSet;

// 1. Develop an application using LinkedList,
//and store Chat Messages(as objects), 
//display, reverse and again display reversed LinkedList
class Chats {
	private String sender_name;
	private String msg;

	public Chats(String sender_name, String msg) {
		super();
		this.sender_name = sender_name;
		this.msg = msg;
	}

	public String getSender_name() {
		return sender_name;
	}

	public void setSender_name(String sender_name) {
		this.sender_name = sender_name;
	}

	public String getMsg() {
		return msg;
	}

	public void setMsg(String msg) {
		this.msg = msg;
	}

	@Override
	public String toString() {
		return "Chats [sender_name=" + sender_name + ", msg=" + msg + "]";
	}
}

public class Abcd {
	public static void main(String[] args) {
		
		/*class TSComparator implements Comparator<Chats> {

			@Override
			public int compare(Chats o1, Chats o2) {
				String name1 = o1.getSender_name();
				String name2 = o2.getSender_name();
				return name1.compareTo(name2);
			}

		}
		
		//Anonymous Inner class
		Comparator<Chats> mcmp = new Comparator<Chats>(){
			@Override
			public int compare
			( o1,  o2)-> {
				String name1 = o1.getSender_name();
				String name2 = o2.getSender_name();
				return o1.getSender_name().compareTo(o2.getSender_name());
			}
		};*/
		
		TreeSet<Chats> cmsgs = new TreeSet<>(( o1,  o2)-> 
			
			 o1.getSender_name().compareTo(o2.getSender_name()));
			
		cmsgs.add(new Chats("name6", "msg1"));
		cmsgs.add(new Chats("name2", "msg2"));
		cmsgs.add(new Chats("name1", "msg3"));
		cmsgs.add(new Chats("name4", "msg4"));

		display(cmsgs);
		
	Chats c= collections.min(cmsgs,(c1,c2)->c1.getMsg().compareTo(c2.getMsg()));
   System.out.println(c);
	}

	static void display(TreeSet<Chats> cmsgs) {
		for (Chats cmg : cmsgs) {
			System.out.println(cmg + "\t");
		}
	}
}

